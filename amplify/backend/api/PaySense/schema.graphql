type Transaction @model @auth(rules: [{ allow: public }, { allow: owner }]) {
  id: ID!
  name: String!
  amount: Float!
  date: AWSDate
  memo: String
  iso_currency_code: String
  FundID: ID! @index(name: "byFund")
}

type FundOptions @model @auth(rules: [{ allow: public }, { allow: owner }]) {
  id: ID!
  monthly_allocation: Float
  is_paused: Boolean
  pause_duration_hours: Float
  category: Categories
  FundRules: [FundRule] @hasMany(indexName: "byFundOptions", fields: ["id"])
}

type FundRule @model @auth(rules: [{ allow: public }, { allow: owner }]) {
  id: ID!
  name: String!
  description: String
  Fund_optionsID: ID! @index(name: "byFundOptions")
}

enum Categories {
  NEED
  SAVE
  WANT
}

enum FundTypes {
  GOAL
  BUDGET
}

type Fund @model @auth(rules: [{ allow: public }, { allow: owner }]) {
  id: ID!
  title: String!
  icon: String!
  fund_balance: Float!
  total_fund_size: Float!
  placement_index: Int!
  type: FundTypes!
    @index(
      name: "byPlacementIndex"
      queryField: "byPlacementIndex"
      sortKeyFields: ["placement_index"]
    )
  FundOptions: FundOptions @hasOne
  Transactions: [Transaction] @hasMany(indexName: "byFund", fields: ["id"])
}
